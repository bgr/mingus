#summary Reference documentation for `mingus.containers.Composition`.

----

= mingus.containers.Composition =

The Composition class is a datastructure for working with [refMingusContainersTrack Tracks]. Composition can be stored together in [refMingusContainersSuite Suites].

----

== Attributes ==

=== `author` ===

  * *Type*: str
  * *Value*: ''

=== `email` ===

  * *Type*: str
  * *Value*: ''

=== `selected_tracks` ===

  * *Type*: list
  * *Value*: []

=== `subtitle` ===

  * *Type*: str
  * *Value*: ''

=== `title` ===

  * *Type*: str
  * *Value*: 'Untitled'

=== `tracks` ===

  * *Type*: list
  * *Value*: []

----

== Functions ==

=== `__add__(self, value)` ===

  * Overloads the + operator for Compositions. Accepts [refMingusContainersNote Notes], note strings, [refMingusContainersNotecontainer NoteContainers], [refMingusContainersBar Bars] and [refMingusContainersTrack Tracks]

=== `__getitem__(self, index)` ===

  * Overloads the [] notation

=== `__init__(self)` ===

=== `__len__(self)` ===

  * Overloads the len() functions

=== `__repr__(self)` ===

  * String representation of the class

=== `__setitem__(self, index, value)` ===

  * Overloads the [] = notation 

=== `add_note(self, note)` ===

  * Adds a note to the selected tracks. Accepts everything [refMingusContainersTrack container.Track] supports in __add__

=== `add_track(self, track)` ===

  * Adds a track to the composition. Raises an !UnexpectedObjectError if the argument is not a [refMingusContainersTrack mingus.containers.Track] object.

=== `empty(self)` ===

  * Removes all the tracks from this class.

=== `reset(self)` ===

  * Resets the information in this class. Removes the track and composer information.

=== `set_author(self, author, email)` ===

  * *Default values*: author = '', email = ''
  * Sets the title and author of the piece

=== `set_title(self, title, subtitle)` ===

  * *Default values*: title = 'Untitled', subtitle = ''
  * Sets the title and subtitle of the piece

----

[mingusIndex Back to Index]