#summary Reference documentation for `mingus.midi.pyfluidsynth`.

----

= mingus.midi.pyfluidsynth =



----

== Attributes ==

=== `DEFAULT_MODE` ===

  * *Type*: int
  * *Value*: 0

=== `RTLD_GLOBAL` ===

  * *Type*: int
  * *Value*: 256

=== `RTLD_LOCAL` ===

  * *Type*: int
  * *Value*: 0

=== `api_version` ===

  * *Type*: str
  * *Value*: '1.2'

=== `cdll` ===

  * *Type*: ctypes.LibraryLoader
  * *Value*: <ctypes.LibraryLoader object at 0xa1d0a8c>

=== `lib` ===

  * *Type*: str
  * *Value*: 'libfluidsynth.so.1'

=== `pydll` ===

  * *Type*: ctypes.LibraryLoader
  * *Value*: <ctypes.LibraryLoader object at 0xa1d0aac>

=== `pythonapi` ===

  * *Type*: ctypes.PyDLL
  * *Value*: <PyDLL 'None', handle b77fc908 at a1d0acc>

----

== Functions ==

=== `ARRAY(typ, len)` ===

=== `CFUNCTYPE(restype)` ===

  * CFUNCTYPE(restype, *argtypes,
                 use_errno=False, use_last_error=False) -> function prototype.

    restype: the result type
    argtypes: a sequence specifying the argument types

    The function prototype can be called in different ways to create a
    callable object:

    prototype(integer address) -> foreign function
    prototype(callable) -> create and return a C callable function from callable
    prototype(integer index, method name[, paramflags]) -> foreign function calling a COM method
    prototype((ordinal number, dll object)[, paramflags]) -> foreign function exported by ordinal
    prototype((function name, dll object)[, paramflags]) -> foreign function exported by name
    

=== `PYFUNCTYPE(restype)` ===

=== `SetPointerType(pointer, cls)` ===

=== `c_buffer(init, size)` ===

  * *Default values*: size = None
=== `cast(obj, typ)` ===

=== `cfunc(name, result)` ===

  * Build and apply a ctypes prototype complete with parameter flags

=== `create_string_buffer(init, size)` ===

  * *Default values*: size = None
  * create_string_buffer(aString) -> character array
    create_string_buffer(anInteger) -> character array
    create_string_buffer(aString, anInteger) -> character array
    

=== `create_unicode_buffer(init, size)` ===

  * *Default values*: size = None
  * create_unicode_buffer(aString) -> character array
        create_unicode_buffer(anInteger) -> character array
        create_unicode_buffer(aString, anInteger) -> character array
        

=== `find_library(name)` ===

=== `fluid_synth_write_s16_stereo(synth, len)` ===

  * Return generated samples in stereo 16-bit format

    Return value is a Numpy array of samples.



=== `raw_audio_string(data)` ===

  * Return a string of bytes to send to soundcard

    Input is a numpy array of samples.  Default output format
    is 16-bit signed (other formats not currently supported).



=== `string_at(ptr, size)` ===

  * *Default values*: size = -1
  * string_at(addr[, size]) -> string

    Return the string at addr.

=== `wstring_at(ptr, size)` ===

  * *Default values*: size = -1
  * wstring_at(addr[, size]) -> string

        Return the string at addr.

----

[mingusIndex Back to Index]